[{"D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\index.js":"1","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\reportWebVitals.js":"2","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\App.js":"3","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\FooterComponent.js":"4","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\UserDetails.js":"5","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\paytmButton.js":"6","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\ProductList.js":"7","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\TodayOrders.js":"8","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\UserDelete.js":"9","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\Logout.js":"10","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\CartList.js":"11","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\AdminProductList.js":"12","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\SignupForm.js":"13","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\ProductUpdate.js":"14","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\ProductAdd.js":"15","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\LoginForm.js":"16","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\UserUpdate.js":"17","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\AllOrders.js":"18","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\paytmChecksum.js":"19","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\HeaderComponent.js":"20","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\service\\OrderService.js":"21","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\service\\LoginService.js":"22","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\service\\ProductService.js":"23","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\service\\CartService.js":"24"},{"size":535,"mtime":1662009796287,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1662009796359,"results":"27","hashOfConfig":"26"},{"size":2269,"mtime":1662009796185,"results":"28","hashOfConfig":"26"},{"size":311,"mtime":1662009796529,"results":"29","hashOfConfig":"26"},{"size":2979,"mtime":1662009796899,"results":"30","hashOfConfig":"26"},{"size":5418,"mtime":1662009796978,"results":"31","hashOfConfig":"26"},{"size":2454,"mtime":1662009796726,"results":"32","hashOfConfig":"26"},{"size":3893,"mtime":1662009796826,"results":"33","hashOfConfig":"26"},{"size":3022,"mtime":1662009796862,"results":"34","hashOfConfig":"26"},{"size":739,"mtime":1662009796630,"results":"35","hashOfConfig":"26"},{"size":5215,"mtime":1662009796500,"results":"36","hashOfConfig":"26"},{"size":3098,"mtime":1662009796430,"results":"37","hashOfConfig":"26"},{"size":6543,"mtime":1662009796794,"results":"38","hashOfConfig":"26"},{"size":4905,"mtime":1662009796760,"results":"39","hashOfConfig":"26"},{"size":4747,"mtime":1662009796694,"results":"40","hashOfConfig":"26"},{"size":3353,"mtime":1662009796598,"results":"41","hashOfConfig":"26"},{"size":8175,"mtime":1662009796942,"results":"42","hashOfConfig":"26"},{"size":2579,"mtime":1662009796463,"results":"43","hashOfConfig":"26"},{"size":2891,"mtime":1662009797009,"results":"44","hashOfConfig":"26"},{"size":3261,"mtime":1662009796562,"results":"45","hashOfConfig":"26"},{"size":902,"mtime":1662009797332,"results":"46","hashOfConfig":"26"},{"size":728,"mtime":1662009797303,"results":"47","hashOfConfig":"26"},{"size":1049,"mtime":1662009797371,"results":"48","hashOfConfig":"26"},{"size":809,"mtime":1662009797270,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yupv5j",{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\index.js",[],"D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\reportWebVitals.js",[],"D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\App.js",["104","105"],"import './App.css';\nimport FooterComponent from './components/FooterComponent';\nimport ProductList from './components/ProductList';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport LoginForm from './components/LoginForm';\nimport SignupForm from './components/SignupForm';\nimport UserDetails from './components/UserDetails';\nimport UserDelete from './components/UserDelete';\nimport UserUpdate from './components/UserUpdate';\nimport Logout from './components/Logout';\nimport { PaytmButton } from './components/paytmButton';\nimport CartListFunction from './components/CartList';\nimport { TodayOrders } from './components/TodayOrders';\nimport { AllOrders } from './components/AllOrders';\nimport AdminProductList from './components/AdminProductList';\nimport LoginPage from './components/LoginForm';\nimport ProductUpdate from './components/ProductUpdate';\nimport ProductAdd from './components/ProductAdd';\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <div className='contain'>\n          <div className='contain1'>\n            <Routes>\n              <Route path='/' element={<ProductList />}></Route>\n              <Route path='/products' element={<ProductList />}></Route>\n              <Route path='/login' element={<LoginPage />}></Route>\n              <Route path='/register' element={<SignupForm />}></Route>\n              <Route path='/profile' element={<UserDetails />}></Route>\n              <Route path='/update' element={<UserUpdate />}></Route>\n              <Route path='/delete' element={<UserDelete />}></Route>\n              <Route path='/cart' element={<CartListFunction />}></Route>\n              <Route path='/logout' element={<Logout />}></Route>\n              <Route path='/pay' element={<PaytmButton />}></Route>\n              <Route path='/toorder' element={<TodayOrders />}></Route>\n              <Route path='/allorder' element={<AllOrders />}></Route>\n              <Route path='/admin' element={<AdminProductList />}></Route>\n              <Route path='/proUpdate' element={<ProductUpdate />}></Route>\n              <Route path='/addPro' element={<ProductAdd />}></Route>\n\n            </Routes>\n          </div>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\FooterComponent.js",[],"D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\UserDetails.js",[],"D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\paytmButton.js",["106","107"],"import React, { useEffect, useState } from \"react\"\nimport OrderService from \"../service/OrderService\";\nimport LoginService from '../service/LoginService';\nimport HeaderComponent from \"./HeaderComponent\";\nimport '../css/payment.css'\nimport CartService from \"../service/CartService\";\n\nconst PaytmChecksum = require('./paytmChecksum').default;\nconst https = require('https');\n\nexport function PaytmButton() {\n  const [paymentData, setPaymentData] = useState({\n    token: \"\",\n    order: \"\",\n    mid: \"\",\n    amount: \"\"\n  });\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    initialize();\n  }, []);\n\n\n\n  const initialize = async e => {\n\n    var cartDetails = await OrderService.getOrder(OrderService.id);\n    let amount = cartDetails.data.totalPrice;\n    let custId = cartDetails.data.customerId;\n    let orderId = cartDetails.data.orderId;\n\n    // Sandbox Credentials\n    let mid = \"wtYSWO67585826770371\"; // Merchant ID\n    let mkey = \"LWShhf%1AYDLT@b8\"; // Merhcant Key\n    var paytmParams = {};\n\n    paytmParams.body = {\n      \"requestType\": \"Payment\",\n      \"mid\": mid,\n      \"websiteName\": \"WEBSTAGING\",\n      \"orderId\": orderId,\n      \"callbackUrl\": \"https://merchant.com/callback\",\n      \"txnAmount\": {\n        \"value\": amount,\n        \"currency\": \"INR\",\n      },\n      \"userInfo\": {\n        \"custId\": custId,\n      }\n    };\n\n    PaytmChecksum.generateSignature(JSON.stringify(paytmParams.body), mkey).then(function (checksum) {\n      console.log(checksum);\n      paytmParams.head = {\n        \"signature\": checksum\n      };\n\n      var post_data = JSON.stringify(paytmParams);\n\n      var options = {\n        /* for Staging */\n        hostname: 'securegw-stage.paytm.in',\n\n        /* for Production */\n        // hostname: 'securegw.paytm.in',\n\n        port: 443,\n        path: `/theia/api/v1/initiateTransaction?mid=${mid}&orderId=${orderId}`,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Content-Length': post_data.length\n        }\n      };\n\n      var response = \"\";\n      var post_req = https.request(options, function (post_res) {\n        post_res.on('data', function (chunk) {\n          response += chunk;\n        });\n        post_res.on('end', function () {\n          console.log('Response: ', response);\n          // res.json({data: JSON.parse(response), orderId: orderId, mid: mid, amount: amount});\n          setPaymentData({\n            ...paymentData,\n            token: JSON.parse(response).body.txnToken,\n            order: orderId,\n            mid: mid,\n            amount: amount\n          })\n        });\n      });\n\n      post_req.write(post_data);\n      post_req.end();\n    });\n  }\n\n  const makePayment = () => {\n    setLoading(true);\n    var config = {\n      \"root\": \"\",\n      \"style\": {\n        \"bodyBackgroundColor\": \"#fafafb\",\n        \"bodyColor\": \"\",\n        \"themeBackgroundColor\": \"#0FB8C9\",\n        \"themeColor\": \"#ffffff\",\n        \"headerBackgroundColor\": \"#284055\",\n        \"headerColor\": \"#ffffff\",\n        \"errorColor\": \"\",\n        \"successColor\": \"\",\n        \"card\": {\n          \"padding\": \"\",\n          \"backgroundColor\": \"\"\n        }\n      },\n      \"data\": {\n        \"orderId\": paymentData.order,\n        \"token\": paymentData.token,\n        \"tokenType\": \"TXN_TOKEN\",\n        \"amount\": paymentData.amount /* update amount */\n      },\n      \"payMode\": {\n        \"labels\": {},\n        \"filter\": {\n          \"exclude\": []\n        },\n        \"order\": [\n          \"CC\",\n          \"DC\",\n          \"NB\",\n          \"UPI\",\n          \"PPBL\",\n          \"PPI\",\n          \"BALANCE\"\n        ]\n      },\n      \"website\": \"WEBSTAGING\",\n      \"flow\": \"DEFAULT\",\n      \"merchant\": {\n        \"mid\": paymentData.mid,\n        \"redirect\": false\n      },\n      \"handler\": {\n        \"transactionStatus\": function transactionStatus(paymentStatus) {\n          console.log(\"paymentStatus => \", paymentStatus);\n          OrderService.updateOrder(paymentData.order);\n          CartService.deleteCart(LoginService.id)\n          console.log(paymentData.order)\n          alert(\"Payment Successfull /n Order placed\")\n          alert(\"Please Login Agian\")\n          window.location = \"/\"\n          setLoading(false);\n        },\n        \"notifyMerchant\": function notifyMerchant(eventName, data) {\n          console.log(\"Closed\");\n          setLoading(false);\n        }\n      }\n    };\n\n    if (window.Paytm && window.Paytm.CheckoutJS) {\n      // initialze configuration using init method\n      window.Paytm.CheckoutJS.init(config).then(function onSuccess() {\n        console.log('Before JS Checkout invoke');\n        // after successfully update configuration invoke checkoutjs\n        window.Paytm.CheckoutJS.invoke();\n      }).catch(function onError(error) {\n        console.log(\"Error => \", error);\n      });\n    }\n  }\n\n  return (\n    <div>\n          <div>\n            <HeaderComponent userName={LoginService.id}></HeaderComponent>\n\n            <div className=\"register-Form1\">\n              <h1 align=\"center\">Payment</h1>\n              <hr></hr>\n\n\n              <label><b>OrderId</b></label>\n              <input type=\"text\" className='register' value={paymentData.order} />\n\n              <label><b>Amount</b></label>\n              <input type=\"text\" className='register' value={paymentData.amount} />\n\n              <button className=\"regBtn2\" onClick={makePayment}>Pay Now</button>\n            </div>\n          </div>\n\n    </div>\n  )\n}","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\ProductList.js",[],"D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\TodayOrders.js",[],"D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\UserDelete.js",[],"D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\Logout.js",[],"D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\CartList.js",[],"D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\AdminProductList.js",[],"D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\SignupForm.js",["108"],"import React, { useState } from \"react\";\nimport validator from 'validator';\nimport { useNavigate } from 'react-router-dom';\nimport LoginService from '../service/LoginService';\nimport HeaderComponent from \"./HeaderComponent\";\nimport '../css/loginStyle.css'\n\nconst SignupForm = () => {\n\n    const [errorMessages, setErrorMessages] = useState('');\n    const [userName, setUserName] = useState('');\n    const [fullName, setFullName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [unameError, setUnameError] = useState(false);\n    const [emailError, setEmailError] = useState(false);\n    const [passError, setPassError] = useState(false);\n    const [cPassError, setCPassError] = useState(false);\n    const [unameErrorMessage, setUnameErrorMessage] = useState('');\n    const [emailErrorMessage, setEmailErrorMessage] = useState('');\n    const [passErrorMessage, setPassErrorMessage] = useState('');\n    const [cPassErrorMessage, setCPassErrorMessage] = useState('');\n    const navigate = useNavigate();\n\n\n\n    const onSignup = async event => {\n        event.preventDefault();\n        if (unameError & emailError & passError & cPassError) {\n            const user = {\n                userName: userName,\n                fullName: fullName,\n                email: email,\n                gender: '',\n                dob: '',\n                mobile_no: '',\n                password: password,\n                address: {\n                    house_no: \"\",\n                    street_name: \"\",\n                    colony_name: \"\",\n                    city: \"\",\n                    state: \"\",\n                    pincode: \"\"\n                }\n            }\n            console.log(userName)\n\n            LoginService.addUser(user)\n\n\n\n            alert(\"Registration Successful\");\n            navigate(\"/login\");\n\n        }\n        else {\n            setErrorMessages('enter valid details')\n        }\n\n    }\n\n    const validateEmail = (e) => {\n        setEmail(e.target.value)\n\n        if (!validator.isEmail(e.target.value)) {\n            setEmailErrorMessage('enter valid email')\n            setEmailError(false);\n        }\n        else {\n            setEmailErrorMessage('')\n            setEmailError(true);\n        }\n    }\n\n    const validateUserName = async e => {\n        setUserName(e.target.value)\n        const uname = e.target.value;\n        const userDetails = await LoginService.getDetails(uname).catch(\n            err => {\n                console.log(err)\n            }\n        )\n        if (!validator.isLength(e.target.value, {\n            min: 6, max: 10\n        })) {\n            setUnameErrorMessage('username should be min 6 and max 10');\n            setUnameError(false);\n        }\n        else if (userDetails != null) {\n            setUnameErrorMessage('username already exist');\n            setUnameError(false);\n        }\n        else {\n            setUnameErrorMessage('')\n            setUnameError(true);\n        }\n    }\n\n    const validatePassword = (e) => {\n        setPassword(e.target.value)\n\n        if (!validator.isStrongPassword(e.target.value, {\n            minLength: 8, minLowercase: 1, minUppercase: 1, minNumbers: 1, minSymbols: 1\n        })) {\n            setPassErrorMessage('password should contain atleast 1 lowercase, 1 uppercase, 1 numerical, 1 special charecter and length min 8')\n            setPassError(false);\n        }\n        else {\n            setPassErrorMessage('')\n            setPassError(true);\n        }\n    }\n\n    const validateCPassword = (e) => {\n\n        if (password !== e.target.value) {\n            setCPassErrorMessage(\"Password deosn't match\")\n            setCPassError(false);\n        }\n        else {\n            setCPassErrorMessage('')\n            setCPassError(true);\n        }\n    }\n\n    const validName = (e) => {\n        setFullName(e.target.value)\n    }\n    return (\n        <div>\n            <HeaderComponent userName={LoginService.id}></HeaderComponent>\n\n            <form className='form' onSubmit={onSignup}>\n                <div className='register-Form'>\n                    <h6 className=\"error\">\n                        <div className=\"error1\">{errorMessages}</div>\n                    </h6>\n                    <img src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/draw1.webp\"\n                  class=\"img-fluid\" alt=\"Sample image\"></img>\n\n                    <h1 align=\"center\">Sign Up</h1>\n                    <hr></hr>\n\n\n                    <label><b>UserName</b></label>\n                    <input type=\"text\" className='register' placeholder='userName' name='userName'\n                        onChange={e => validateUserName(e)} on required />\n                    <div className=\"error1\">{unameErrorMessage}</div>\n\n                    <label><b>Full Name</b></label>\n                    <input type=\"text\" className='register' placeholder='fullName' name='fullName'\n                        onChange={e => validName(e)} required />\n\n                    <label><b>Email</b></label>\n                    <input type=\"text\" className='register' placeholder='email' name='email'\n                        onChange={(e) => validateEmail(e)} required />\n                    <div className=\"error1\">{emailErrorMessage}</div>\n                    {/* <label><b>Email</b></label>\n                    <input type=\"text\" className='register' placeholder='abc.@' name='email'\n                        onChange={e => this.email = e.target.value}/> */}\n\n                    <label><b>Password</b></label>\n                    <input type=\"password\" className='register' placeholder='password' name='password'\n                        onChange={(e) => validatePassword(e)} required />\n                    <div className=\"error1\">{passErrorMessage}</div>\n                    {/* <label><b>Confirm Password</b></label>\n                    <input type=\"password\" className='register' placeholder='password' name='confirmpassword'\n                        onChange={e => this.confirmpassword = e.target.value}/> */}\n\n                    <label><b>Confirm Password</b></label>\n                    <input type=\"password\" className='register' placeholder='re-enter password' name='password'\n                        onChange={(e) => validateCPassword(e)} required />\n                    <div className=\"error1\">{cPassErrorMessage}</div>\n\n                    <button className='regBtn'>Sign Up</button>\n                </div>\n            </form>\n        </div>\n    );\n}\nexport default SignupForm;","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\ProductUpdate.js",[],"D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\ProductAdd.js",["109"],"import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport ProductService from '../service/ProductService';\nimport LoginService from '../service/LoginService';\nimport HeaderComponent from './HeaderComponent';\n\n\nfunction ProductAdd() {\n    const [productId, setProductId] = useState('');\n    const [productName, setProductName] = useState('');\n    const [productType, setProductType] = useState('');\n    const [category, setCategory] = useState('');\n    const [image, setImage] = useState('');\n    const [price, setPrice] = useState();\n    const [rating, setRating] = useState('');\n    const [description, setDescription] = useState('');\n    const navigate = useNavigate();\n\n    const onUpdate = async event => {\n        event.preventDefault();\n        const product = {\n            productId: productId,\n            productName: productName,\n            productType: productType,\n            category: category,\n            image: image,\n            price: price,\n            rating: rating,\n            description: description\n        }\n\n        ProductService.addProduct(product).then(res => { console.log(res) });\n        alert(\"Product added\")\n        navigate(\"/admin\")\n    }\n\n    const validProductId = (e) => {\n        setProductId(e.target.value);\n    }\n    const validName = (e) => {\n        setProductName(e.target.value);\n    }\n    const validCategory = (e) => {\n        setCategory(e.target.value);\n    }\n    const validProductType = (e) => {\n        setProductType(e.target.value);\n    }\n    const validImage = (e) => {\n        setImage(e.target.value);\n    }\n    const validPrice = (e) => {\n        setPrice(e.target.value);\n    }\n    const validRating = (e) => {\n        setRating(e.target.value);\n    }\n    const validDescription = (e) => {\n        setDescription(e.target.value);\n    }\n\n    if (LoginService.role === \"admin\") {\n        return (\n            <div>\n                <HeaderComponent userName={LoginService.id}></HeaderComponent>\n\n                <form className='form' onSubmit={onUpdate}>\n                    <div className='register-Form'>\n\n                        <h1 align=\"center\">Add Product</h1>\n                        <p align=\"center\">Please enter required Details</p>\n                        <hr></hr>\n                        <label><b>Product Id</b></label>\n                        <input type=\"text\" value={productId} className='register' placeholder='productId' name='productId'\n                            onChange={e => validProductId(e)} required />\n                        <label><b>Product Name</b></label>\n                        <input type=\"text\" value={productName} className='register' placeholder='productName' name='fullName'\n                            onChange={e => validName(e)} required />\n                        <label><b>Product Type</b></label>\n                        <input type=\"text\" value={productType} className='register' placeholder='productType' name='productType'\n                            onChange={e => validProductType(e)} required />\n                        <label><b>Category</b></label>\n                        <input type=\"text\" value={category} className='register' placeholder='category' name='category'\n                            onChange={e => validCategory(e)} required />\n                        <label><b>Image</b></label>\n                        <input type=\"text\" value={image} className='register' placeholder='image.jpg' name='image'\n                            onChange={e => validImage(e)} required />\n                        <label><b>Price</b></label>\n                        <input type=\"text\" value={price} className='register' placeholder='price' name='price'\n                            onChange={e => validPrice(e)} required />\n                        <label><b>Rating</b></label>\n                        <input type=\"text\" value={rating} className='register' placeholder='rating' name='rating'\n                            onChange={e => validRating(e)} required />\n                        <label><b>Description</b></label>\n                        <input type=\"text\" value={description} className='register' placeholder='description' name='description'\n                            onChange={e => validDescription(e)} required />\n                        <button className='regBtn'>Add</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n    else {\n        return (\n            <div>\n                <HeaderComponent userName={LoginService.id}></HeaderComponent>\n\n                <div className='head1'>\n                    <h2>You are not Allowed to this Page</h2>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ProductAdd\n","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\LoginForm.js",["110","111","112"],"import React, { useState } from 'react';\nimport bcryptjs from 'bcryptjs';\nimport '../css/loginStyle.css';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport LoginService from '../service/LoginService';\nimport HeaderComponent from './HeaderComponent';\n\nfunction LoginForm(props) {\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const errors = {\n    uname: \"user not found\",\n    pass: \"invalid password\"\n  };\n  const handleSubmit = async event => {\n    //Prevent page reload\n    event.preventDefault();\n\n    var { uname, pass } = document.forms[0];\n    const userDetails = await LoginService.getDetails(uname.value)\n      .catch(err => {\n        setErrorMessages({ name: \"uname\", message: errors.uname });\n      });\n\n\n    // Compare user info\n    if (userDetails.data.userName === uname.value) {\n      if (!bcryptjs.compareSync(pass.value, userDetails.data.password)) {\n        // Invalid password\n        setErrorMessages({ name: \"pass\", message: errors.pass });\n      } else {\n        alert(`welcome ${userDetails.data.fullName}`);\n        LoginService.userId(uname.value)\n        LoginService.userRole(userDetails.data.role)\n        if (userDetails.data.role === \"user\") {\n          props.navigate(\"/products\")\n        }\n        else {\n          props.navigate(\"/admin\")\n        }\n        console.log(userDetails.data.role)\n        setIsSubmitted(true);\n\n      }\n    } else {\n      // Username not found\n      setErrorMessages({ name: \"uname\", message: errors.uname });\n    }\n  };\n\n  const renderErrorMessage = (name) =>\n    name === errorMessages.name && (\n      <div className=\"error1\">{errorMessages.message}</div>\n    );\n\n  const onSignup = () => {\n    window.location = '/register';\n  };\n\n  return (\n    <div>\n      <HeaderComponent userName={LoginService.id}></HeaderComponent>\n\n      <form className='form' onSubmit={handleSubmit}>\n        <div className='register-Form'>\n          <h6 className=\"error\">{renderErrorMessage('uname')}</h6>\n        <img className=\"image\" src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/draw2.webp\"\n          class=\"img-fluid\"  alt=\"Sample image\"></img>\n          <h1 align=\"center\">LOGIN</h1>\n          <hr></hr>\n\n\n          <label><b>Username</b></label>\n          <input type=\"text\" className='register' placeholder='username' name='uname' />\n          {/* <label><b>Email</b></label>\n                    <input type=\"text\" className='register' placeholder='abc.@' name='email'\n                        onChange={e => this.email = e.target.value}/> */}\n\n          <label><b>Password</b></label>\n          <input type=\"password\" className='register' placeholder='password' name='pass' />\n          {renderErrorMessage(\"pass\")}\n          {/* <label><b>Confirm Password</b></label>\n                    <input type=\"password\" className='register' placeholder='password' name='confirmpassword'\n                        onChange={e => this.confirmpassword = e.target.value}/> */}\n\n          <button className='regBtn'>Sign in</button>\n        </div>\n      </form>\n      <button className='regBtn1' onClick={onSignup}>Sign up</button>\n\n    </div>\n\n  );\n\n}\n\nfunction LoginPage() {\n  const navigate = useNavigate();\n  return (\n    <LoginForm navigate={navigate}></LoginForm>\n  )\n}\n\nexport default LoginPage\n\n\n\n","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\UserUpdate.js",[],"D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\AllOrders.js",[],"D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\paytmChecksum.js",[],"D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\components\\HeaderComponent.js",[],"D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\service\\OrderService.js",["113"],"import axios from 'axios'\n\nclass OrderService {\n    constructor() {\n        //this.id = null;\n    }\n    orderId = (id) => {\n        if (!id) return this.id;\n        this.id = id;\n    }\n    async addOrder(username) {\n        return await axios.post(`http://localhost:9090/api/order/v1/order/addOrder/${username}`)\n    }\n    async updateOrder(orderId) {\n        axios.put(`http://localhost:9090/api/order/v1/order/updateOrder/${orderId}`)\n    }\n    async getOrder(orderId) {\n        return await axios.get(`http://localhost:9090/api/order/v1/order/getByOrderId/${orderId}`)\n    }\n    async getUserOrder(username) {\n        return await axios.get(`http://localhost:9090/api/order/v1/order/getTodaysOrders/${username}`)\n    }\n    async getUserAllOrder(username) {\n        return await axios.get(`http://localhost:9090/api/order/v1/order/getOrder/${username}`)\n    }\n\n\n}\n\nexport default new OrderService();\n","D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\service\\LoginService.js",[],"D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\service\\ProductService.js",[],"D:\\Case Study\\case-shopping-jfs-master\\case-shopping-jfs-master\\shop-cart\\src\\service\\CartService.js",[],{"ruleId":"114","severity":1,"message":"115","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":23},{"ruleId":"114","severity":1,"message":"118","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":17},{"ruleId":"114","severity":1,"message":"119","line":18,"column":10,"nodeType":"116","messageId":"117","endLine":18,"endColumn":17},{"ruleId":"120","severity":1,"message":"121","line":22,"column":6,"nodeType":"122","endLine":22,"endColumn":8,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":139,"column":21,"nodeType":"126","endLine":140,"endColumn":56},{"ruleId":"114","severity":1,"message":"127","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":26},{"ruleId":"114","severity":1,"message":"128","line":4,"column":10,"nodeType":"116","messageId":"117","endLine":4,"endColumn":18},{"ruleId":"114","severity":1,"message":"129","line":10,"column":10,"nodeType":"116","messageId":"117","endLine":10,"endColumn":21},{"ruleId":"124","severity":1,"message":"125","line":67,"column":9,"nodeType":"126","endLine":68,"endColumn":49},{"ruleId":"130","severity":1,"message":"131","line":4,"column":5,"nodeType":"132","messageId":"133","endLine":6,"endColumn":6},"no-unused-vars","'FooterComponent' is defined but never used.","Identifier","unusedVar","'LoginForm' is defined but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialize'. Either include it or remove the dependency array.","ArrayExpression",["134"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useEffect' is defined but never used.","'Navigate' is defined but never used.","'isSubmitted' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",{"desc":"135","fix":"136"},"Update the dependencies array to be: [initialize]",{"range":"137","text":"138"},[614,616],"[initialize]"]